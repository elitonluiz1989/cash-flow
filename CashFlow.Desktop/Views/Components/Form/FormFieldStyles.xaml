<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"              
                    xmlns:System="clr-namespace:System;assembly=mscorlib"
                    xmlns:local="clr-namespace:CashFlow.Desktop.Views.Components.Form"> 
    <local:FormFieldIsComboboxConverter x:Key="IsComboboxConverter" />
    <local:FormFieldIsTextConverter x:Key="IsTextConverter" />
    <local:FormFieldHasWidthDefinedConverter x:Key="HasWidthDefinedConverter" />
    <local:FormFieldHasMaxLengthDefinedConverter x:Key="HasMaxLengthDefinedConverter" />
    <local:FormFieldTextAsNumericConverter x:Key="TextAsNumericConverter" />
    <local:FormFieldTextAsCurrencyConverter x:Key="TextAsCurrencyConverter" />

    <Style TargetType="Label">
        <Setter Property="FontSize" Value="13" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="HorizontalContentAlignment" Value="Right" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
    </Style>

    <Style x:Key="GridValueStyle" TargetType="Grid">
        <Setter Property="Margin" Value="3" />
    </Style>

    <Style x:Key="ValueStyle" TargetType="FrameworkElement">
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />

        <Style.Triggers>
            <DataTrigger
                Binding="{Binding FieldWidth,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource HasWidthDefinedConverter}}"
                Value="False">
                <Setter Property="HorizontalAlignment" Value="Stretch" />
            </DataTrigger>

            <DataTrigger
                Binding="{Binding FieldWidth,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource HasWidthDefinedConverter}}"
                Value="True">
                <Setter Property="Width" Value="{Binding FieldWidth, ElementName=FormFieldComponent}" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Type text -->
    <Style x:Key="TextValueBaseStyle" TargetType="TextBox" BasedOn="{StaticResource ValueStyle}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="FontSize" Value="14" />

        <Style.Triggers>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextValueStyle" TargetType="TextBox" BasedOn="{StaticResource TextValueBaseStyle}">
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="IsEnabled" Value="False" />
        
        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Type,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource IsTextConverter}}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
            
            <DataTrigger
                Binding="{Binding MaxLength,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource HasMaxLengthDefinedConverter}}"
                Value="True">
                <Setter Property="MaxLength" Value="{Binding MaxLength, ElementName=FormFieldComponent}" />
            </DataTrigger>

            <DataTrigger
                Binding="{Binding FormattingType,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource TextAsNumericConverter}}"
                Value="True">
                <Setter Property="TextAlignment" Value="Right" />
            </DataTrigger>

            <DataTrigger
                Binding="{Binding FormattingType,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource TextAsCurrencyConverter}}"
                Value="True">
                <Setter Property="Panel.ZIndex" Value="1" />
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="TextAlignment" Value="Right" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="TextValueCurrencyStyle" TargetType="TextBox" BasedOn="{StaticResource TextValueBaseStyle}">
        <Setter Property="TextAlignment" Value="Right" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="Focusable" Value="False" />

        <Style.Triggers>
            <DataTrigger
                Binding="{Binding FormattingType,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource TextAsCurrencyConverter}}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
            </DataTrigger>
        </Style.Triggers>
    </Style>
    
    <!-- Type combobox -->
    <Style TargetType="ComboBox" BasedOn="{StaticResource ValueStyle}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Padding" Value="3" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="Visibility" Value="Hidden" />
        <Setter Property="IsEnabled" Value="False" />

        <Style.Triggers>
            <DataTrigger
                Binding="{Binding Type,
                            ElementName=FormFieldComponent,
                            Converter={StaticResource IsComboboxConverter}}"
                Value="True">
                <Setter Property="Visibility" Value="Visible" />
                <Setter Property="IsEnabled" Value="True" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="ListErrorsStyle" TargetType="ItemsControl">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Margin" Value="3" />
        <Setter Property="Focusable" Value="False" />

        <Style.Resources>
            <Style TargetType="TextBox">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="Foreground" Value="#cc1400" />
                <Setter Property="BorderThickness" Value="0" />
                <Setter Property="TextWrapping" Value="Wrap" />
                <Setter Property="IsReadOnly" Value="True" />
            </Style>
        </Style.Resources>
    </Style>
</ResourceDictionary>